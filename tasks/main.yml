---
# tasks file for roles/upgrade-distpackages

- name: system packages | upgrade
  become: true
  ansible.builtin.yum:
    name: "{{ item }}"
    exclude: "{{ upgrade_distpackages_excludes | join(',') }}"
    state: latest
    update_cache: true
  with_items: "{{ upgrade_distpackages }}"
  # Ignore ansible-lint warning about "latest"
  tags:
    - skip_ansible_lint

- name: system | current running kernel
  ansible.builtin.command: uname -r
  register: running_kernel_version
  check_mode: false
  changed_when: false

# http://serverfault.com/a/601432
- name: system | latest installed kernel
  ansible.builtin.shell: >-
    rpm -q kernel --qf '%{BUILDTIME} %{VERSION}-%{RELEASE}.%{ARCH}\n' |
    tail -n 1 | cut -f 2 -d ' '
  register: latest_kernel_version
  check_mode: false
  changed_when: false
  # Ignore ansible-lint warning about using rpm (this is just a query)
  tags:
    - skip_ansible_lint

- name: system | check if reboot needed
  ansible.builtin.set_fact:
    system_reboot_needed: >-
     {{ running_kernel_version.stdout != latest_kernel_version.stdout }}

- ansible.builtin.debug:
    msg: >-
      Reboot needed (kernel): Current:{{ running_kernel_version.stdout }}
       Latest:{{ latest_kernel_version.stdout }}
  when: system_reboot_needed

# https://support.ansible.com/hc/en-us/articles/201958037-Reboot-a-server-and-wait-for-it-to-come-back
- name: system | reboot
  become: true
  ansible.builtin.shell: "sleep 2 && shutdown -r now 'Rebooting (Ansible kernel update)'"
  async: 1
  poll: 0
  ignore_errors: true
  when: upgrade_distpackages_reboot_kernel and system_reboot_needed

- name: system | wait for server to reboot
  ansible.builtin.wait_for:
    delay: 15
    host: "{{ ansible_host | default(inventory_hostname) }}"
    port: "{{ ansible_port | default(22) }}"
    state: "started"
    timeout: "{{ upgrade_distpackages_reboot_timeout }}"
  delegate_to: localhost
  when: upgrade_distpackages_reboot_kernel and system_reboot_needed
